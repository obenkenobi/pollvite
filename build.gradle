plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.8.21' apply false
    id 'org.springframework.boot' version '3.0.6' apply false
    id 'io.spring.dependency-management' version '1.1.0' apply false
    id 'org.jetbrains.kotlin.plugin.spring' version '1.8.21' apply false

    id 'java'
}

subprojects {
    def isJvmProject = ['springBoot'].contains(project.projectType)
    
    if (isJvmProject) {
        apply plugin: 'java'
        apply from: "${parent.rootDir}/gradleScripts/jvmlibs.gradle"

        def isSpringProject = 'springBoot' == project.projectType
        def usingKotlin = project.hasProperty('jvmLanguage') && 'kotlin'.equals(project.jvmLanguage)

        sourceCompatibility = parent.properties.javaVersion

        if (usingKotlin) {
            apply plugin: 'org.jetbrains.kotlin.jvm';

            tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
                kotlinOptions {
                    freeCompilerArgs = ['-Xjsr305=strict']
                    jvmTarget = parent.properties.javaVersion
                }
            }
        }

        repositories {
            mavenCentral()
        }

        test {
            useJUnitPlatform()
        }

        configurations {
            compileOnly {
                extendsFrom annotationProcessor
            }
        }

        if (isSpringProject) {
            apply plugin: 'org.springframework.boot'
            apply plugin: 'io.spring.dependency-management'

            if (usingKotlin) {
                apply plugin: 'org.jetbrains.kotlin.plugin.spring'
            }

            ext {
                set('springCloudVersion', "2022.0.2")
            }

            dependencyManagement {
                imports {
                    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
                }
            }
        }
    }
}



